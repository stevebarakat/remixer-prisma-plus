{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/sb/Dev/remixer-bus 2/app/root.tsx", "/Users/sb/Dev/remixer-bus 2/app/routes/actions.js", "../app/utils/supabase.js", "/Users/sb/Dev/remixer-bus 2/app/routes/index.jsx", "../app/components/Mixer.jsx", "../app/components/Controls.jsx", "../app/components/Restart.jsx", "../app/components/Rewind.jsx", "../app/components/FastFwd.jsx", "../app/components/Play.jsx", "../app/utils/formatTime.js", "../app/components/MasterVol.jsx", "../app/components/VuMeter.jsx", "../app/utils/scale.js", "../app/components/Bus1.jsx", "../app/components/ChannelStrip.jsx", "../app/utils/skin.js", "../app/components/Loader.jsx", "/Users/sb/Dev/remixer-bus 2/app/routes/songs.jsx", "/Users/sb/Dev/remixer-bus 2/app/routes/songs/$id.jsx", "../app/utils/db.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport globalStylesUrl from \"~/styles/global.css\";\n\nexport const links = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: \"https://meyerweb.com/eric/tools/css/reset/reset.css\",\n    },\n    {\n      rel: \"stylesheet\",\n      href: globalStylesUrl,\n    },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remixer\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { redirect } from \"@remix-run/node\";\nimport supabase from \"~/utils/supabase\";\n\nexport const action = async ({ request }) => {\n  const form = await request.formData();\n  const actionName = form.get(\"actionName\");\n  const track = form.get(\"track\");\n  const parsedTrack = JSON.parse(track);\n\n  console.log(actionName);\n\n  switch (actionName) {\n    case \"changeVolume\":\n      const volume = form.get(\"volume\");\n      await supabase.from(\"tracks\").upsert({\n        id: parsedTrack.id,\n        ...parsedTrack,\n        volume,\n      });\n      break;\n\n    case \"changePan\":\n      const pan = form.get(\"pan\");\n      console.log(\"PAN: \", pan);\n      await supabase.from(\"tracks\").upsert({\n        id: parsedTrack.id,\n        ...parsedTrack,\n        pan,\n      });\n      break;\n\n    case \"changeMute\":\n      const mute = form.get(\"mute\");\n      await supabase.from(\"tracks\").upsert({\n        id: parsedTrack.id,\n        ...parsedTrack,\n        mute,\n      });\n      break;\n\n    case \"changeSolo\":\n      const solo = form.get(\"solo\");\n      await supabase.from(\"tracks\").upsert({\n        id: parsedTrack.id,\n        ...parsedTrack,\n        solo,\n      });\n      break;\n\n    case \"changeHighEqLevel\":\n      const highEqLevel = form.get(\"highEqLevel\");\n      await supabase.from(\"tracks\").upsert({\n        id: parsedTrack.id,\n        ...parsedTrack,\n        highEqLevel: parseFloat(highEqLevel),\n      });\n      break;\n\n    case \"changeMidEqLevel\":\n      const midEqLevel = form.get(\"midEqLevel\");\n      await supabase.from(\"tracks\").upsert({\n        id: parsedTrack.id,\n        ...parsedTrack,\n        midEqLevel: parseFloat(midEqLevel),\n      });\n      break;\n\n    case \"changeLowEqLevel\":\n      const lowEqLevel = form.get(\"lowEqLevel\");\n      await supabase.from(\"tracks\").upsert({\n        id: parsedTrack.id,\n        ...parsedTrack,\n        lowEqLevel: parseFloat(lowEqLevel),\n      });\n      break;\n\n    default:\n      throw new Response(`Unknown action ${actionName}`, { status: 400 });\n  }\n  return redirect(\"/\");\n};\n", "import { createClient } from \"@supabase/supabase-js\";\n\n// const isServer = typeof window === \"undefined\";\n\n// const supabaseUrl = isServer\n//   ? process.env.SUPABASE_URL\n//   : window.env.SUPABASE_URL;\n// const supabaseKey = isServer\n//   ? process.env.SUPABASE_KEY\n//   : window.env.SUPABASE_KEY;\n\nconst supabaseUrl = \"https://ioxpcmpvgermtfqxwykx.supabase.co\";\nconst supabaseKey =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlveHBjbXB2Z2VybXRmcXh3eWt4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTAzMzYzNzgsImV4cCI6MTk2NTkxMjM3OH0.0B-AnGPQZA9rR1JXvNYRy-3l7eeY5FUtszp9-2gl8wI\";\n\nexport default createClient(supabaseUrl, supabaseKey);\n", "import { useState, useEffect } from \"react\";\nimport { Form, useFetcher } from \"@remix-run/react\";\n// import supabase from \"~/utils/supabase\";\nimport Mixer from \"~/components/Mixer\";\n\nexport default function Index() {\n  const fetcher = useFetcher();\n  const songQuery = fetcher.data;\n  const [selectedSongId, setSelectedSongId] = useState(\"roxanne\");\n\n  // load server data via resource route based on selected song id\n  useEffect(() => {\n    if (fetcher.type === \"init\") {\n      fetcher.load(`/songs/${selectedSongId}`);\n    }\n  }, [fetcher, selectedSongId]);\n\n  useEffect(() => {\n    fetcher.load(`/songs/${selectedSongId}`);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedSongId]);\n\n  // useEffect(() => {\n  //   supabase\n  //     .from(`tracks:song_id=eq.${selectedSongId}`)\n  //     .on(\"*\", (payload) => {\n  //       console.log(\"payload\", payload.new.volume);\n  //       setVolume(payload.new.volume);\n  //     })\n  //     .subscribe();\n  // }, [selectedSongId]);\n\n  function changeSong(e) {\n    switch (e.target.value) {\n      case \"a-day-in-the-life\":\n        setSelectedSongId(\"a-day-in-the-life\");\n        break;\n\n      case \"roxanne\":\n        setSelectedSongId(\"roxanne\");\n        break;\n\n      default:\n        break;\n    }\n  }\n  return (\n    <div>\n      {songQuery !== undefined && <Mixer song={songQuery.song} />}\n      <Form method=\"post\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <select\n          onChange={changeSong}\n          className=\"song-select\"\n          name=\"slug\"\n          id=\"song-select\"\n        >\n          <option value=\"\">Choose A Song...</option>\n          <option value=\"a-day-in-the-life\">\n            The Beatles - A Day In The Life\n          </option>\n          <option value=\"roxanne\">The Police - Roxanne</option>\n        </select>\n      </Form>\n    </div>\n  );\n}\n", "import { useState, useEffect, useRef, useCallback } from \"react\";\nimport {\n  loaded,\n  Player,\n  EQ3,\n  Channel,\n  Meter,\n  Reverb,\n  Gain,\n  Volume,\n  Add,\n  Chorus,\n  Distortion,\n  PitchShift,\n  Phaser,\n  FeedbackDelay,\n  Transport as t,\n} from \"tone\";\nimport Controls from \"./Controls\";\nimport MasterVol from \"./MasterVol\";\nimport Bus1 from \"./Bus1\";\nimport ChannelStrip from \"./ChannelStrip\";\nimport Loader from \"./Loader\";\n\nfunction Mixer({ song }) {\n  const tracks = song.tracks;\n  const requestRef = useRef();\n  const channels = useRef([]);\n  const players = useRef([]);\n  const eqs = useRef([]);\n  const meters = useRef([]);\n  const masterMeter = useRef(null);\n  const busOneChannel = useRef(null);\n  const [meterVals, setMeterVals] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [fxOneType, setFxOneType] = useState(null);\n  const [fxOneChoice, setFxOneChoice] = useState(null);\n  const handleSetFxOneChoice = (value) => setFxOneChoice(value);\n  const [state, setState] = useState(\"stopped\");\n  const handleSetState = (value) => setState(value);\n  const [busOneActive, setBusOneActive] = useState(false);\n\n  console.log(\"fxOneChoice\", fxOneChoice);\n  // console.log(\"fxOneType\", fxOneType);\n\n  t.set({ bpm: 92 });\n  // make sure song stops at end\n  if (t.seconds > song.end) {\n    t.position = song.end;\n    t.stop();\n    setState(\"stopped\");\n  }\n  // make sure song doesn't rewind past start position\n  if (t.seconds < 0) {\n    t.position = song.start;\n    t.seconds = song.start;\n  }\n  useEffect(() => {\n    // create audio nodes\n    masterMeter.current = new Meter();\n\n    for (let i = 0; i < tracks.length; i++) {\n      channels.current.push(\n        new Channel(tracks[i].volume, tracks[i].pan).toDestination()\n      );\n      players.current.push(new Player(tracks[i].path));\n      eqs.current.push(new EQ3());\n      meters.current.push(new Meter());\n    }\n\n    // connect everything\n    players.current.forEach((player, i) =>\n      player\n        .chain(eqs.current[i], channels.current[i], meters.current[i])\n        .sync()\n        .start()\n    );\n\n    return () => {\n      t.stop();\n      players.current.forEach((player, i) => {\n        player.dispose();\n        meters.current[i].dispose();\n        eqs.current[i].dispose();\n        channels.current[i].dispose();\n      });\n      players.current = [];\n      meters.current = [];\n      eqs.current = [];\n      channels.current = [];\n    };\n  }, [tracks]);\n\n  useEffect(() => {\n    loaded().then(() => setIsLoaded(true));\n  }, [setIsLoaded]);\n\n  // loop recursively to amimateMeters\n  const animateMeter = useCallback(() => {\n    meters.current.forEach((meter, i) => {\n      meterVals[i] = meter.getValue() + 85;\n      setMeterVals(() => [...meterVals]);\n    });\n    requestRef.current = requestAnimationFrame(animateMeter);\n  }, [meterVals]);\n\n  // triggers animateMeter\n  useEffect(() => {\n    if (state !== \"started\") return;\n    requestAnimationFrame(animateMeter);\n    return () => cancelAnimationFrame(requestRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  // when fxOneChoice is selected it initiates\n  useEffect(() => {\n    switch (fxOneChoice) {\n      case \"FX\":\n        setFxOneType(null);\n        break;\n      case \"reverb\":\n        setFxOneType(new Reverb({ decay: 3, wet: 1 }).toDestination());\n        break;\n      case \"delay\":\n        setFxOneType(\n          new FeedbackDelay({\n            delayTime: \"1n\",\n            wet: 1,\n          }).toDestination()\n        );\n        break;\n      case \"chours\":\n        setFxOneType(\n          new Chorus({\n            frequency: 4,\n            delayTime: 2.5,\n            depth: 0.5,\n            wet: 1,\n          }).toDestination()\n        );\n        break;\n      case \"phaser\":\n        setFxOneType(\n          new Phaser({\n            wet: 1,\n            frequency: 15,\n            octaves: 5,\n            baseFrequency: 1000,\n          }).toDestination()\n        );\n        break;\n      case \"pitch-shift\":\n        setFxOneType(\n          new PitchShift({\n            pitch: 24,\n            wet: 1,\n          }).toDestination()\n        );\n        break;\n      case \"distortion\":\n        setFxOneType(\n          new Distortion({\n            distortion: 8,\n            wet: 1,\n          }).toDestination()\n        );\n        break;\n      default:\n        break;\n    }\n  }, [fxOneChoice]);\n\n  useEffect(() => {\n    if (fxOneChoice === \"FX\") fxOneType.dispose();\n    if (fxOneType === null || busOneChannel.current === null) return;\n    console.log(\"fxOneType\", fxOneType);\n    busOneChannel.current.connect(fxOneType);\n    return () => fxOneType.dispose();\n  }, [fxOneType, fxOneChoice]);\n\n  function toggleBusOne(e) {\n    const id = parseInt(e.target.id.toString()[0], 10);\n    for (let i = 0; i < tracks.length; i++) {\n      console.log(e.target.checked);\n      setBusOneActive(e.target.checked);\n      if (i === id) {\n        if (e.target.checked) {\n          busOneChannel.current = new Gain({ gain: 0 }).toDestination();\n          channels.current[i].connect(busOneChannel.current);\n        } else {\n          busOneChannel.current.dispose();\n        }\n      }\n    }\n  }\n\n  // wait for the buffers to load\n  return isLoaded === false ? (\n    <div className=\"loader-wrap\">\n      <div className=\"logo-wrap\">\n        <img src=\"/remix.svg\" alt=\"remix\" width=\"500\" />\n      </div>\n      <span>\n        Loading: {song.artist} - {song.name}{\" \"}\n      </span>\n      <Loader />\n    </div>\n  ) : (\n    <div className=\"console\">\n      <div className=\"header-wrap\">\n        <div className=\"logo-wrap\">\n          <img src=\"/remix.svg\" alt=\"remix\" width=\"600\" />\n          <p style={{ fontWeight: \"bold\" }}>version 0.0.0.0.1</p>\n        </div>\n        <div className=\"song-info\">\n          <p>Artist: {song.artist}</p>\n          <p>Song:{song.name}</p>\n          <p>Year:{song.year}</p>\n          <p>Studio:{song.studio}</p>\n          <p>Location:{song.location}</p>\n        </div>\n      </div>\n      <div className=\"mixer\">\n        {tracks.map((track, i) => {\n          return (\n            <ChannelStrip\n              key={track.path}\n              index={i}\n              meterVal={meterVals[i]}\n              channel={channels.current[i]}\n              eq={eqs.current[i]}\n              track={track}\n              state={state}\n              toggleBusOne={toggleBusOne}\n            />\n          );\n        })}\n        <Bus1\n          busOneActive={busOneActive}\n          busOneChannel={busOneChannel.current}\n          handleSetFxOneChoice={handleSetFxOneChoice}\n        />\n        <MasterVol state={state} masterMeter={masterMeter.current} />\n      </div>\n      <div className=\"controls-wrap\">\n        <div className=\"controls-well\">\n          <Controls song={song} state={state} handleSetState={handleSetState} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Mixer;\n", "import { useRef } from \"react\";\nimport { Transport } from \"tone\";\nimport Restart from \"./Restart\";\nimport Rewind from \"./Rewind\";\nimport FastFwd from \"./FastFwd\";\nimport Play from \"./Play\";\nimport { formatMilliseconds } from \"~/utils/formatTime\";\n\nfunction Controls({ song, state, handleSetState }) {\n  const startTime = useRef(Transport.now());\n  const currentTime = useRef(Transport.now());\n\n  return (\n    <>\n      <div className=\"buttons-wrap\">\n        <Restart song={song} startTime={startTime} />\n        <Rewind startTime={startTime} startPosition={song.start} />\n        <Play song={song} state={state} handleSetState={handleSetState} />\n        <FastFwd\n          startTime={startTime}\n          currentTime={currentTime}\n          startPosition={song.start}\n          endPosition={song.end}\n          handleSetState={handleSetState}\n        />\n      </div>\n      <div className=\"clock\">\n        <div className=\"ghost\">88:88:88</div>\n        {formatMilliseconds(Transport.seconds)}\n      </div>\n      {/* <div className=\"window js-window\">\n        {formatMilliseconds(Transport.seconds)}\n      </div> */}\n    </>\n  );\n}\n\nexport default Controls;\n", "import { FaStepBackward } from \"react-icons/fa\";\nimport { Transport as t } from \"tone\";\n\nfunction Restart({ song, startTime }) {\n  function restart() {\n    t.position = song.start;\n    startTime.current = song.start;\n  }\n\n  return (\n    <button className=\"button\" onClick={restart}>\n      <FaStepBackward />\n    </button>\n  );\n}\n\nexport default Restart;\n", "import { FaBackward } from \"react-icons/fa\";\nimport { Transport as t } from \"tone\";\n\nfunction Rewind({ startTime, startPosition }) {\n  function rew() {\n    if (parseInt(t.position, 10) < 10) {\n      t.position = startPosition;\n    } else {\n      t.position = startPosition - startTime.current - 10;\n      startTime.current += 10;\n    }\n  }\n\n  return (\n    <button className=\"button\" onClick={rew}>\n      <FaBackward />\n    </button>\n  );\n}\n\nexport default Rewind;\n", "import { FaForward } from \"react-icons/fa\";\nimport { Transport as t } from \"tone\";\n\nfunction FastFwd({ startTime, startPosition, endPosition, currentTime }) {\n  function ff() {\n    if (t.seconds > endPosition - 10) {\n      t.seconds = endPosition;\n      startTime.current = startPosition;\n    } else {\n      t.position = currentTime.current - startTime.current + 10;\n      startTime.current -= 10;\n    }\n  }\n\n  return (\n    <button className=\"button\" onClick={ff}>\n      <FaForward />\n    </button>\n  );\n}\n\nexport default FastFwd;\n", "import { useState } from \"react\";\nimport { start, Transport as t } from \"tone\";\nimport { FaPlay, FaPause } from \"react-icons/fa\";\n\nfunction Play({ state, handleSetState, song }) {\n  const [ready, setReady] = useState(false);\n\n  function initializeAudioContext() {\n    start();\n    t.position = song.start;\n    t.start();\n    handleSetState(\"started\");\n    setReady(true);\n  }\n\n  function startSong() {\n    if (state === \"started\") {\n      t.pause();\n      handleSetState(\"paused\");\n    } else if (state === \"stopped\") {\n      t.start();\n      handleSetState(\"started\");\n    } else if (state === \"paused\") {\n      t.start();\n      handleSetState(\"started\");\n    }\n  }\n\n  const playerState = (() => {\n    switch (t.state) {\n      case \"stopped\":\n        return <FaPlay />;\n      case \"paused\":\n        return <FaPlay />;\n      case \"started\":\n        return <FaPause />;\n      default:\n        break;\n    }\n  })();\n\n  return (\n    <div>\n      {ready ? (\n        <button className=\"button\" onClick={startSong}>\n          {playerState}\n        </button>\n      ) : (\n        <button className=\"button\" onClick={initializeAudioContext}>\n          <FaPlay />\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Play;\n", "export function formatSeconds(seconds) {\n  var s = Math.floor(seconds % 60),\n    m = Math.floor(((seconds * 1000) / (1000 * 60)) % 60),\n    str = \"\";\n  s = s < 10 ? \"0\" + s : s;\n  m = m < 10 ? \"0\" + m : m;\n  str += m + \":\";\n  str += s;\n  return str;\n}\n\nexport function formatMilliseconds(seconds) {\n  var ms = Math.floor((seconds * 1000) % 1000),\n    s = Math.floor(seconds % 60),\n    m = Math.floor(((seconds * 1000) / (1000 * 60)) % 60),\n    str = \"\";\n  s = s < 10 ? \"0\" + s : s;\n  m = m < 10 ? \"0\" + m : m;\n  ms = ms < 10 ? \"0\" + ms : ms;\n  str += m + \":\";\n  str += s + \":\";\n  str += ms.toString().slice(0, 2);\n  return str;\n}\n", "import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Destination } from \"tone\";\nimport VuMeter from \"./VuMeter\";\nimport { dBToPercent } from \"~/utils/scale\";\n\nfunction MasterVol({ state, masterMeter }) {\n  const requestRef = useRef();\n  const [masterMeterVal, setMasterMeterVal] = useState(-12);\n  const [masterVol, setMasterVol] = useState(0);\n  Destination.connect(masterMeter);\n\n  function changeMasterVolume(e) {\n    const value = parseInt(e.target.value, 10);\n    const v = Math.log(value + 101) / Math.log(113);\n    const sv = dBToPercent(v);\n    setMasterVol(Math.round(sv));\n    Destination.set({ volume: sv });\n  }\n\n  const animateMeter = useCallback(() => {\n    setMasterMeterVal(masterMeter.getValue() + 85);\n    requestRef.current = requestAnimationFrame(animateMeter);\n  }, [masterMeter]);\n\n  useEffect(() => {\n    if (state === \"started\") {\n      requestAnimationFrame(animateMeter);\n    } else {\n      return () => {\n        cancelAnimationFrame(requestRef.current);\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  return (\n    <div\n      className=\"fader-wrap\"\n      style={{\n        padding: \"12px 0 0 0\",\n        margin: \"0 0 0 16px\",\n      }}\n    >\n      <div className=\"window js-window\">\n        <input\n          disabled\n          type=\"text\"\n          className=\"level-val\"\n          value={masterVol + \" db\"}\n        />\n      </div>\n      <div className=\"levels-wrap\">\n        <VuMeter meterValue={masterMeterVal} height={450} width={12.5} />\n      </div>\n      <div className=\"master-vol-wrap\">\n        <input\n          className=\"master-volume\"\n          type=\"range\"\n          min={-100}\n          max={12}\n          defaultValue={-20}\n          step=\"1\"\n          onChange={changeMasterVolume}\n        />\n      </div>\n      <div className=\"track-labels\">\n        <span className=\"track-name\">Master</span>\n      </div>\n    </div>\n  );\n}\n\nexport default MasterVol;\n", "import { useRef, useEffect, useCallback } from \"react\";\n\n// Settings\nlet curVal = 0;\nconst max = 100;\nconst boxCount = 100;\nconst boxCountRed = 20;\nconst boxCountYellow = 30;\nconst boxGapFraction = 0.2;\n\n// Colors\nconst redOn = \"hsla(302, 67%, 54%, 0.9)\";\nconst redOff = \"hsla(302, 67%, 24%, 0.9)\";\nconst yellowOn = \"hsla(47, 99%, 55%, 0.9)\";\nconst yellowOff = \"hsla(47, 99%, 25%, 0.9)\";\nconst greenOn = \"hsla(118, 60%, 63%, 0.9)\";\nconst greenOff = \"hsla(118, 60%, 33%, 0.9)\";\n\nfunction VuMeter({ meterValue, height, width }) {\n  const stage = useRef();\n  const drawRef = useRef();\n\n  // Gap between boxes and box height\n  const boxHeight = height / (boxCount + (boxCount + 1) * boxGapFraction);\n  const boxGapY = boxHeight * boxGapFraction;\n\n  const boxWidth = width - boxGapY * 2;\n  const boxGapX = (width - boxWidth) / 2;\n\n  // Get the color of a box given it's ID and the current value\n  const getBoxColor = useCallback((id, val) => {\n    if (id > boxCount - boxCountRed) {\n      return id <= Math.ceil((val / max) * boxCount) ? redOn : redOff;\n    }\n    if (id > boxCount - boxCountRed - boxCountYellow) {\n      return id <= Math.ceil((val / max) * boxCount) ? yellowOn : yellowOff;\n    }\n    return id <= Math.ceil((val / max) * boxCount) ? greenOn : greenOff;\n  }, []);\n\n  useEffect(() => {\n    const c = stage.current.getContext(\"2d\");\n\n    c.fillStyle = \"green\";\n    c.strokeStyle = \"black\";\n\n    c.shadowBlur = 5;\n\n    const draw = function () {\n      const targetVal = parseInt(stage.current.dataset.volume, 10);\n\n      // Gradual approach\n      if (curVal <= targetVal) {\n        curVal += (targetVal - curVal) / 5;\n      } else {\n        curVal -= (curVal - targetVal) / 5;\n      }\n\n      // Draw the container\n      c.save();\n      c.beginPath();\n      c.rect(0, 0, width, height);\n      c.fillStyle = \"rgb(12,22,32)\";\n      c.fill();\n      c.restore();\n\n      // Draw the boxes\n      c.save();\n      c.translate(boxGapX, boxGapY);\n      for (let i = 0; i < boxCount; i++) {\n        const id = Math.abs(i - (boxCount - 1)) + 1;\n\n        c.beginPath();\n        if (id <= Math.ceil((targetVal / max) * boxCount)) {\n          c.shadowBlur = 10;\n          c.shadowColor = getBoxColor(id, targetVal);\n        }\n        c.rect(0, 0, boxWidth, boxHeight);\n        c.fillStyle = getBoxColor(id, targetVal);\n        c.fill();\n        c.translate(0, boxHeight + boxGapY);\n      }\n      c.restore();\n\n      drawRef.current = requestAnimationFrame(draw);\n    };\n\n    requestAnimationFrame(draw);\n\n    return () => cancelAnimationFrame(drawRef.current);\n  }, []);\n\n  useEffect(() => {\n    stage.current.dataset.volume = meterValue;\n  }, [meterValue]);\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <canvas\n        className=\"vu-meter\"\n        ref={stage}\n        width={width}\n        height={height}\n        data-volume={0}\n      />\n    </div>\n  );\n}\n\nexport default VuMeter;\n", "// convert a value from one scale to another\n// e.g. App.util.scale(-96, -192, 0, 0, 100) to convert\n// -96 from dB (-192 - 0) to percentage (0 - 100)\nexport const scale = function (val, f0, f1, t0, t1) {\n  return ((val - f0) * (t1 - t0)) / (f1 - f0) + t0;\n};\n\n// convert dBFS to a percentage\nexport const dBToPercent = function (dB) {\n  return scale(dB, 0, 1, -100, 12);\n};\n\n// convert percentage to dBFS\nexport const percentTodB = function (percent) {\n  return scale(percent, -100, 12, 0, 1);\n};\n", "import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Destination } from \"tone\";\nimport VuMeter from \"./VuMeter\";\nimport { scale } from \"~/utils/scale\";\n\nfunction Bus1({ state, busOneChannel, handleSetFxOneChoice, busOneActive }) {\n  const requestRef = useRef();\n  const [masterMeterVal, setMasterMeterVal] = useState(-12);\n  const [masterVol, setMasterVol] = useState(0);\n\n  function changeMasterVolume(e) {\n    const value = parseFloat(e.target.value);\n    // const v = Math.log(value + 61) / Math.log(67);\n    // const sv = scale(v, 0, 1, -60, 6);\n    setMasterVol(value);\n    busOneChannel.set({ gain: value });\n  }\n\n  // const animateMeter = useCallback(() => {\n  //   setMasterMeterVal(masterMeter.getValue() + 85);\n  //   requestRef.current = requestAnimationFrame(animateMeter);\n  // }, [masterMeter]);\n\n  // useEffect(() => {\n  //   if (state === \"started\") {\n  //     requestAnimationFrame(animateMeter);\n  //   } else {\n  //     return () => {\n  //       cancelAnimationFrame(requestRef.current);\n  //     };\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [state]);\n\n  return (\n    <div>\n      {busOneActive ? (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <select\n            onChange={(e) => handleSetFxOneChoice(e.target.value)}\n            className=\"effect-select\"\n          >\n            <option value=\"fx1\">FX1</option>\n            <option value=\"reverb\">Reverb</option>\n            <option value=\"delay\">Delay</option>\n            <option value=\"chours\">Chorus</option>\n            <option value=\"phaser\">Phaser</option>\n            <option value=\"pitch-shift\">PitchShift</option>\n            <option value=\"distortion\">Distortion</option>\n          </select>\n        </div>\n      ) : null}\n\n      <div\n        className=\"fader-wrap\"\n        style={{\n          padding: \"12px 0 0 0\",\n          margin: \"0 0 0 16px\",\n        }}\n      >\n        <div className=\"window js-window\">\n          <input\n            disabled\n            type=\"text\"\n            className=\"level-val\"\n            value={masterVol + \" db\"}\n          />\n        </div>\n        <div className=\"levels-wrap\">\n          <VuMeter meterValue={masterMeterVal} height={450} width={12.5} />\n        </div>\n        <div className=\"master-vol-wrap\">\n          <input\n            className=\"master-volume\"\n            type=\"range\"\n            min={0}\n            max={1}\n            defaultValue={0.5}\n            step=\"0.000001\"\n            onChange={changeMasterVolume}\n          />\n        </div>\n        <div className=\"track-labels\">\n          <span className=\"track-name\">Bus 1</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Bus1;\n", "import { useState, useRef } from \"react\";\nimport { useFetcher } from \"@remix-run/react\";\nimport { Knob } from \"react-rotary-knob\";\nimport skin from \"~/utils/skin\";\nimport VuMeter from \"./VuMeter\";\nimport { scale } from \"../utils/scale\";\n\nfunction ChannelStrip({\n  index,\n  track,\n  channel,\n  eq,\n  meterVal,\n  state,\n  toggleBusOne,\n}) {\n  const fetcher = useFetcher();\n  const [isMuted, setIsMuted] = useState(track.mute);\n  const volume = useRef(track.volume);\n  const preFader = meterVal;\n  const postFader = meterVal + volume;\n  const [isPostFader, setIsPostFader] = useState(true);\n  const [highEqLevel, setHighEqLevel] = useState(track.highEqLevel);\n  const [midEqLevel, setMidEqLevel] = useState(track.midEqLevel);\n  const [lowEqLevel, setLowEqLevel] = useState(track.lowEqLevel);\n\n  // THIS IS WHERE THE LOGARITHMIC SCALE IS SET\n  function changeVolume(e) {\n    if (isMuted) return;\n    const value = parseFloat(e.target.value, 10);\n    const vol = Math.log(value + 101) / Math.log(113);\n    const scaledVol = scale(vol, 0, 1, -100, 12);\n\n    volume.current = value;\n    channel.set({ volume: scaledVol });\n    fetcher.submit(\n      {\n        actionName: \"changeVolume\",\n        track: JSON.stringify(track),\n        volume: value,\n      },\n      { method: \"post\", action: \"/actions\", replace: true }\n    );\n  }\n\n  // THIS IS WHERE PAN IS SET\n  function changePan(e) {\n    const pan = e.target.value;\n    channel.set({ pan });\n    fetcher.submit(\n      {\n        actionName: \"changePan\",\n        track: JSON.stringify(track),\n        pan,\n      },\n      { method: \"post\", action: \"/actions\", replace: true }\n    );\n  }\n\n  // THIS IS WHERE SOLO IS SET\n  function changeSolo(e) {\n    const solo = e.target.checked;\n    channel.set({ solo });\n    fetcher.submit(\n      {\n        actionName: \"changeSolo\",\n        track: JSON.stringify(track),\n        solo,\n      },\n      { method: \"post\", action: \"/actions\", replace: true }\n    );\n  }\n\n  // THIS IS WHERE MUTE IS SET\n  function changeMute(e) {\n    const mute = e.target.checked;\n    setIsMuted(mute);\n    channel.set({ mute });\n    fetcher.submit(\n      {\n        actionName: \"changeMute\",\n        track: JSON.stringify(track),\n        mute,\n      },\n      { method: \"post\", action: \"/actions\", replace: true }\n    );\n  }\n\n  // THIS IS WHERE HIGH EQ IS SET\n  function changeHighEqLevel(val) {\n    eq.high.value = val;\n    fetcher.submit(\n      {\n        actionName: \"changeHighEqLevel\",\n        track: JSON.stringify(track),\n        highEqLevel: val,\n      },\n      { method: \"post\", action: \"/actions\", replace: true }\n    );\n    setHighEqLevel(val);\n  }\n\n  // THIS IS WHERE MID EQ IS SET\n  function changeMidEqLevel(val) {\n    eq.mid.value = val;\n    fetcher.submit(\n      {\n        actionName: \"changeMidEqLevel\",\n        track: JSON.stringify(track),\n        midEqLevel: val,\n      },\n      { method: \"post\", action: \"/actions\", replace: true }\n    );\n    setMidEqLevel(val);\n  }\n\n  // THIS IS WHERE LOW EQ IS SET\n  function changeLowEqLevel(val) {\n    eq.low.value = val;\n    fetcher.submit(\n      {\n        actionName: \"changeLowEqLevel\",\n        track: JSON.stringify(track),\n        lowEqLevel: val,\n      },\n      { method: \"post\", action: \"/actions\", replace: true }\n    );\n    setLowEqLevel(val);\n  }\n\n  return (\n    <div className=\"channel\">\n      <div className=\"fader-wrap\">\n        <div className=\"fx-labels\">EQ</div>\n        <div id=\"hi\">\n          <fetcher.Form method=\"post\" action=\"/actions\">\n            <input type=\"hidden\" name=\"actionName\" value=\"changeHighEqLevel\" />\n            <Knob\n              className=\"knob\"\n              min={-8}\n              max={8}\n              preciseMode={true}\n              unlockDistance={0}\n              rotateDegrees={180}\n              clampMin={40}\n              clampMax={320}\n              defaultValue={track.highEqLevel}\n              value={highEqLevel}\n              onChange={changeHighEqLevel}\n              step={0.01}\n              skin={skin}\n              track={track}\n            />\n          </fetcher.Form>\n        </div>\n        <div id=\"mid\">\n          <fetcher.Form method=\"post\" action=\"/actions\">\n            <input type=\"hidden\" name=\"actionName\" value=\"changeMidEqLevel\" />\n            <Knob\n              onChange={changeMidEqLevel}\n              className=\"knob\"\n              min={-8}\n              max={8}\n              preciseMode={true}\n              unlockDistance={0}\n              rotateDegrees={180}\n              clampMin={40}\n              clampMax={320}\n              defaultValue={track.midEqLevel}\n              value={midEqLevel}\n              step={0.01}\n              skin={skin}\n              track={track}\n            />\n          </fetcher.Form>\n        </div>\n        <div id=\"low\">\n          <fetcher.Form method=\"post\" action=\"/actions\">\n            <input type=\"hidden\" name=\"actionName\" value=\"changeLowEqLevel\" />\n            <Knob\n              onChange={changeLowEqLevel}\n              className=\"knob\"\n              min={-8}\n              max={8}\n              preciseMode={true}\n              unlockDistance={0}\n              rotateDegrees={180}\n              clampMin={40}\n              clampMax={320}\n              defaultValue={track.lowEqLevel}\n              value={lowEqLevel}\n              step={0.01}\n              skin={skin}\n              track={track}\n            />\n          </fetcher.Form>\n        </div>\n      </div>\n      <div className=\"solo-mute\">\n        <input\n          id={`solo${track.path}`}\n          type=\"checkbox\"\n          defaultChecked={track.solo}\n          onChange={changeSolo}\n        />\n        <label className=\"label\" htmlFor={`solo${track.path}`}>\n          S\n        </label>\n        <input\n          id={`mute${track.path}`}\n          type=\"checkbox\"\n          defaultChecked={track.mute}\n          onChange={changeMute}\n        />\n        <label className=\"label\" htmlFor={`mute${track.path}`}>\n          M\n        </label>\n      </div>\n      <div className=\"bus\">\n        <input\n          id={index + track.path}\n          type=\"checkbox\"\n          onChange={toggleBusOne}\n        />\n        <label className=\"label\" htmlFor={index + track.path}>\n          Bus 1\n        </label>\n      </div>\n      <div className=\"pfl\">\n        <input\n          id={`postFader${track.path}`}\n          type=\"checkbox\"\n          onChange={(e) => {\n            setIsPostFader(!e.target.checked);\n          }}\n        />\n        <label className=\"label\" htmlFor={`postFader${track.path}`}>\n          {isPostFader ? \"POST\" : \"PRE\"}\n        </label>\n      </div>\n\n      <div className=\"fader-wrap\">\n        <div>\n          <input\n            id={track.id}\n            className=\"pan\"\n            type=\"range\"\n            defaultValue={track.pan}\n            min={-1}\n            max={1}\n            step={0.001}\n            onChange={changePan}\n          />\n          <div className=\"pan-labels\">\n            <span>L</span>\n            <span>R</span>\n          </div>\n        </div>\n        <div className=\"window js-window\">\n          <input\n            disabled\n            type=\"text\"\n            className=\"level-val\"\n            value={Math.round(volume.current) + \" db\"}\n          />\n        </div>\n        <div className=\"levels-wrap\">\n          <VuMeter\n            meterValue={isPostFader ? postFader : preFader}\n            height={300}\n            width={10}\n          />\n        </div>\n        <div className=\"vol-wrap\">\n          <input\n            id={track.id}\n            className=\"volume\"\n            type=\"range\"\n            min={-100}\n            max={12}\n            step={0.01}\n            defaultValue={volume.current}\n            onChange={changeVolume}\n          />\n        </div>\n        <div className=\"track-labels\">\n          <span className=\"track-name\">{track.name}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChannelStrip;\n", "export default {\n  knobX: 70,\n  knobY: 70,\n  svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"200px\" height=\"200px\" viewBox=\"0 0 200 200\" version=\"1.1\">\n  <g id=\"knob\" transform=\"translate(30, 30)\">\n    <circle width=\"30px\" fill=\"#333333\" cx=\"70\" cy=\"70\" r=\"100\"/>\n    <circle fill=\"#FFFFFF\" cx=\"37\" cy=\"37\" r=\"10\" transform=\"translate(33, -35)\"/>\n  </g>\n</svg>`,\n};\n", "import React from \"react\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst loadKeyframes = {\n  \"0%\": {\n    boxShadow: \"0 2.5em 0 -1.3em\",\n  },\n  \"80%\": {\n    boxShadow: \"0 2.5em 0 -1.3em\",\n  },\n  \"100%\": {\n    boxShadow: \"0 2.5em 0 -1.3em\",\n  },\n  \"40%\": {\n    boxShadow: \"0 2.5em 0 0\",\n  },\n};\n\nconst base = {\n  borderRadius: \"50%\",\n  width: \"2.5em\",\n  height: \"2.5em\",\n  animationFillMode: \"both\",\n  animationName: loadKeyframes,\n  animationDuration: \"1.8s\",\n  animationIterationCount: \"infinite\",\n  animationTimingFunction: \"ease-in-out\",\n  animationDelay: \"initial\",\n  animationDirection: \"initial\",\n  animationPlayState: \"initial\",\n};\nconst beforeAfter = {\n  content: \"''\",\n  position: \"absolute\",\n  top: 0,\n};\n\nconst styles = StyleSheet.create({\n  loader: {\n    ...base,\n    color: \"white\",\n    fontSize: \"10px\",\n    margin: \"80px auto\",\n    position: \"relative\",\n    textIndent: \"-9999em\",\n    transform: \"translateZ(0)\",\n    animationDelay: \"-0.16s\",\n    \":before\": {\n      ...base,\n      ...beforeAfter,\n      left: \"-3.5em\",\n      animationDelay: \"-0.32s\",\n    },\n    \":after\": {\n      ...base,\n      ...beforeAfter,\n      left: \"3.5em\",\n    },\n  },\n});\n\nconst Loader = () => {\n  return <div className={css(styles.loader)} />;\n};\n\nexport default Loader;\n", "import { Outlet } from \"@remix-run/react\";\n\nfunction songs() {\n  return <Outlet />;\n}\n\nexport default songs;\n", "import { db } from \"~/utils/db.server\";\nimport { json } from \"@remix-run/node\";\n\nexport const loader = async ({ params: { id } }) => {\n  const song = await db.song.findUnique({\n    where: { id: id },\n    include: { tracks: true },\n  });\n  if (!song) throw new Error(\"Song not found\");\n  const data = { song };\n  return json(data);\n};\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n  }\n  db = global.__db;\n}\n\nexport { db };\n", "export default {'version':'1a876e45','entry':{'module':'/build/entry.client-OSX3OI2H.js','imports':['/build/_shared/chunk-KWLKFF5Z.js','/build/_shared/chunk-NE3JXY4K.js','/build/_shared/chunk-IYRIQ6PI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-I3DISROU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/actions':{'id':'routes/actions','parentId':'root','path':'actions','index':undefined,'caseSensitive':undefined,'module':'/build/routes/actions-53LUDP3G.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-SOWPG3QX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/songs':{'id':'routes/songs','parentId':'root','path':'songs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/songs-3ZIIZOZN.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/songs/$id':{'id':'routes/songs/$id','parentId':'routes/songs','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/songs/$id-EV2ZNUSR.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-1A876E45.js'};", "\nimport * as entryServer from \"/Users/sb/Dev/remixer-bus 2/app/entry.server.tsx\";\nimport * as route0 from \"/Users/sb/Dev/remixer-bus 2/app/root.tsx\";\nimport * as route1 from \"/Users/sb/Dev/remixer-bus 2/app/routes/actions.js\";\nimport * as route2 from \"/Users/sb/Dev/remixer-bus 2/app/routes/index.jsx\";\nimport * as route3 from \"/Users/sb/Dev/remixer-bus 2/app/routes/songs.jsx\";\nimport * as route4 from \"/Users/sb/Dev/remixer-bus 2/app/routes/songs/$id.jsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/actions\": {\n      id: \"routes/actions\",\n      parentId: \"root\",\n      path: \"actions\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/songs\": {\n      id: \"routes/songs\",\n      parentId: \"root\",\n      path: \"songs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/songs/$id\": {\n      id: \"routes/songs/$id\",\n      parentId: \"routes/songs\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": []
}
